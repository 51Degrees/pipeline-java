name: Nightly Pipeline

on:
  workflow_dispatch:
    inputs:
      dryrun:
        type: boolean
        default: false
  schedule:
    - cron: '0 0 * * *'

jobs:
  PackageUpdate:
    name: Nightly Package Update
    uses: 51Degrees/common-ci/.github/workflows/nightly-package-update.yml@main
    with:
      repo-name: ${{ github.event.repository.name }}
      org-name: ${{ github.event.repository.owner.login }}
      dryrun: ${{ inputs.dryrun || false }}
    secrets:
      token: ${{ secrets.ACCESS_TOKEN }}

  SubmoduleUpdate:
    name: Nightly Submodule Update
    uses: 51Degrees/common-ci/.github/workflows/nightly-submodule-update.yml@main
    with:
      repo-name: ${{ github.event.repository.name }}
      org-name: ${{ github.event.repository.owner.login }}
      dryrun: ${{ inputs.dryrun || false }}
    secrets:
      token: ${{ secrets.ACCESS_TOKEN }}

  PullRequests:
    if: ${{ !cancelled() }}
    needs: [PackageUpdate, SubmoduleUpdate]
    name: Nightly Pull Requests
    uses: 51Degrees/common-ci/.github/workflows/nightly-pull-requests.yml@main
    with:
      repo-name: ${{ github.event.repository.name }}
      org-name: ${{ github.event.repository.owner.login }}
      dryrun: ${{ inputs.dryrun || false }}
      cache-assets: true
    secrets:
      token: ${{ secrets.ACCESS_TOKEN }}
      TestResourceKey: ${{ secrets.SUPER_RESOURCE_KEY}}

  Publish:
    if: ${{ !cancelled() }}
    needs: PullRequests
    name: Nightly Publish
    uses: 51Degrees/common-ci/.github/workflows/nightly-publish.yml@main
    with:
      repo-name: ${{ github.event.repository.name }}
      org-name: ${{ github.event.repository.owner.login }}
      dryrun: ${{ inputs.dryrun || false }}
      cache-assets: true
    secrets:
      token: ${{ secrets.ACCESS_TOKEN }}
      TestResourceKey: ${{ secrets.SUPER_RESOURCE_KEY}}
      MavenSettings: ${{ secrets.JAVA_STAGING_SETTINGS_BASE64 }}
      JavaGpgKeyPassphrase: ${{ secrets.JAVA_GPG_KEY_PASSPHRASE }}
      JavaPGP: ${{ secrets.JAVA_KEY_PGP_FILE }}
      CodeSigningKeyVaultName: ${{ secrets.CODE_SIGNING_KEY_VAULT_NAME }}
      CodeSigningKeyVaultUrl: ${{ secrets.CODE_SIGNING_KEY_VAULT_URL }}
      CodeSigningKeyVaultClientId: ${{ secrets.CODE_SIGNING_KEY_VAULT_CLIENT_ID }}
      CodeSigningKeyVaultTenantId: ${{ secrets.CODE_SIGNING_KEY_VAULT_TENANT_ID }}
      CodeSigningKeyVaultClientSecret: ${{ secrets.CODE_SIGNING_KEY_VAULT_CLIENT_SECRET }}
      CodeSigningKeyVaultCertificateName: ${{ secrets.CODE_SIGNING_KEY_VAULT_CERTIFICATE_NAME }}
      CodeSigningKeyVaultCertificateData: ${{ secrets.CODE_SIGNING_KEY_VAULT_CERTIFICATE_DATA }}
