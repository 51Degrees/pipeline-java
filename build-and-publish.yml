trigger:
- master
- develop
- release/*

variables:
  - group: CertificateVariables
  # Access token for the git repository. Used by the git tag task.
  - name: system_accesstoken
    value: $(System.AccessToken)

stages:

- stage: Build_Linux
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-16.04'

    steps:
    - checkout: self
      submodules: recursive
      lfs: false
      # The line below are needed to allow the pipeline access to the
      # OAuth access token that controls write access to the git repository.
      # (Required for GitTag task)
      persistCredentials: true
      clean: true

    - task: gittools.gitversion.gitversion-task.GitVersion@5
      displayName: GitVersion
      inputs:
        preferBundledVersion: true

    # The secure file to download will be stored in the
    # Pipelines/Library/SecureFiles section in Azure DevOps.
    - task: DownloadSecureFile@1
      displayName: 'Download Code Signing Certificate'
      name: CodeSigningCert
      inputs:
        secureFile: '51Degrees Code Signing Certificate.asc'

    - task: Bash@3
      continueOnError: true
      inputs:
        targetType: 'inline'
        script: 'echo $(gpg_passphrase) | gpg --import --batch --yes --passphrase-fd 0 "$(CodeSigningCert.secureFilePath)"'

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: 'cp $(stagingsettings.secureFilePath) /tmp/settings.xml'

    - task: Maven@2
      displayName: 'Maven version set'
      inputs:
        goals: 'versions:set'
        options: '-DnewVersion=$(GitVersion.SemVer)'
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        mavenAuthenticateFeed: false

    - task: Maven@1
      displayName: 'Maven install'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean install'
        options: '-Pbuild -Dhttps.protocols=TLSv1.2 -Dbuildversion=$(GitVersion.SemVer) -Dskippackagesign=false -Dgpg.passphrase=$(gpg_passphrase)'
        jdkVersionOption: '1.8'

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(build.sourcesdirectory)'
        Contents: '*'
        TargetFolder: '$(build.artifactstagingdirectory)'

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: 'echo $(GitVersion.SemVer) >> version.txt'

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(build.sourcesdirectory)'
        Contents: 'version.txt'
        TargetFolder: '$(build.artifactstagingdirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'